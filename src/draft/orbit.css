:root {
  --max-orbits: 12; /* Maximum number of orbits */
  --begin-at: 0deg;
  --range: 360deg;
  --ellipse-ratio-x: 1;
  --ellipse-ratio-y: 1;
}

* {
  box-sizing: border-box;
}



o-sector path:hover {
  stroke: red;
  cursor: pointer;
}
svg {
  pointer-events: none;
  overflow: visible;
}
svg > * {
  pointer-events: stroke;
}
o-sector path {
  stroke-opacity: 0.5;
  border: 1px solid purple;
  
}
o-sector {
  container-name: sectors;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  position: absolute;
  pointer-events: none;
  width: 100%;
  transform: rotate(calc((var(--begin-at) + var(--angle) * var(--sat-number))));
  ---o-width-factor: 1;
}
 o-sector svg path {
    display: none
  }
@container sectors style(--ellipse-ratio-x: 1) and style(--ellipse-ratio-y: 1) {
  /* Conditional render sector if ratio equals 1*/
  o-sector svg path {
    display: block
  }
}
o-progress {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  position: absolute;
  pointer-events: none;
  width: var(--o-diameter);
  --o-width-factor: 1;
}
.vector {
  height: 9px; /*use vars latter */
  border: none;
  border-width: 1px;
  border-style: solid;
  border-top-right-radius: 50%;
  border-bottom-right-radius: 50%; 
  width: calc(
    var(--o-radius) / var(--orbit-nth) * var(--o-width-factor, 1)
  ); /*bug? when set number below 1 */
  padding: 0;
  background: red;
  position: absolute;
  pointer-events: none;
  transform: translate(
      calc(
        (
            var(--o-radius) -
              calc(
                var(--o-radius) / var(--orbit-nth) * var(--o-width-factor, 1)
              ) / 2
          ) / var(--ellipse-ratio-x) *
          cos(var(--begin-at) + var(--angle) * var(--sat-number))
      ),
      calc(
        (
            var(--o-radius) -
              calc(
                var(--o-radius) / var(--orbit-nth) * var(--o-width-factor, 1)
              ) / 2
          ) / var(--ellipse-ratio-y) *
          sin(var(--begin-at) + var(--angle) * var(--sat-number))
      )
    )
    rotate(calc(var(--angle) * var(--sat-number)));
}
o-progress.rounded {
  --o-linecap: round;
}
o-sector.gap1 {
  --o-gap: 1;
}
o-sector.gap2 {
  --o-gap: 2;
}
o-sector.gap3 {
  --o-gap: 3;
}
o-sector.gap4 {
  --o-gap: 4;
}
o-sector.gap5 {
  --o-gap: 5;
}

.full {
  --o-width-factor: var(--orbit-nth);
}
.x12 {
  --o-width-factor: 12;
}
.x11 {
  --o-width-factor: 11;
}
.x10 {
  --o-width-factor: 10;
}
.x9 {
  --o-width-factor: 9;
}
.x8 {
  --o-width-factor: 8;
}
.x7 {
  --o-width-factor: 7;
}
.x6 {
  --o-width-factor: 6;
}
.x5 {
  --o-width-factor: 5;
}
.x4 {
  --o-width-factor: 4;
}
.x3 {
  --o-width-factor: 3;
}
.x2 {
  --o-width-factor: 2;
}
.x1 {
  --o-width-factor: 1;
}
.x075 {
  --o-width-factor: 0.75;
}
.x05 {
  --o-width-factor: 0.5;
}
.x025 {
  --o-width-factor: 0.25;
}

.top-left {
  align-items: flex-start !important;
  justify-content: flex-start !important;
}
.top-center {
  align-items: flex-start !important;
  justify-content: center !important;
}
.top-right {
  align-items: flex-start !important;
  justify-content: flex-end !important;
}
.bottom-left {
  align-items: flex-end !important;
  justify-content: flex-start !important;
}
.bottom-center {
  align-items: flex-end !important;
  justify-content: center !important;
}
.bottom-right {
  align-items: flex-end !important;
  justify-content: flex-end !important;
}
.center-left {
  align-items: center !important;
  justify-content: flex-start !important;
}
.center {
  align-items: center !important;
  justify-content: center !important;
}
.center-right {
  align-items: center !important;
  justify-content: flex-end !important;
}

.orbital-zone {
  --o-lenght: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  width: var(--o-lenght);
  aspect-ratio: 1;
  position: absolute;
  pointer-events: none;
}

.orbit,
[class*="orbit-"] {
  border: 1px solid #007bff; /* Orbit color and thickness */
  border-radius: 50%;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  --o-diameter: calc(var(--orbit-nth) * var(--o-lenght) / var(--max-orbits));
  --o-radius: calc(var(--o-diameter) / 2);
  width: calc(var(--o-diameter) / var(--ellipse-ratio-x));
  height: calc(var(--o-diameter) / var(--ellipse-ratio-y));
}

.satellite {
  width: 5px; /* Adjust satellite size */
  height: 5px; /* Adjust satellite size */
  background-color: yellow; /* Adjust satellite color */
  border-radius: 50%; /* Make it a circle */
  border: 1px solid black;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translate(
    calc(
      var(--o-radius) / var(--ellipse-ratio-x) *
        cos(var(--begin-at) + var(--angle) * var(--sat-number))
    ),
    calc(
      var(--o-radius) / var(--ellipse-ratio-y) *
        sin(var(--begin-at) + var(--angle) * var(--sat-number))
    )
  );
}

.satellite > .orbital-zone {
  --o-lenght: var(--o-diameter);
  width: var(--o-lenght);
  height: auto;
  justify-content: center;
  align-items: center;
}
.orbit-0 {
  --orbit-nth: 0;
  border: 1px solid red;
}
.orbit:nth-child(1),
.orbit-1 {
  --orbit-nth: 1;
}
.orbit:nth-child(2),
.orbit-2 {
  --orbit-nth: 2;
}

.orbit:nth-child(3),
.orbit-3 {
  --orbit-nth: 3;
}

.orbit:nth-child(4),
.orbit-4 {
  --orbit-nth: 4;
}

.orbit:nth-child(5),
.orbit-5 {
  --orbit-nth: 5;
}

.orbit:nth-child(6),
.orbit-6 {
  --orbit-nth: 6;
}

.orbit:nth-child(7),
.orbit-7 {
  --orbit-nth: 7;
}

.orbit:nth-child(8),
.orbit-8 {
  --orbit-nth: 8;
}

.orbit:nth-child(9),
.orbit-9 {
  --orbit-nth: 9;
}

.orbit:nth-child(10),
.orbit-10 {
  --orbit-nth: 10;
}

.orbit:nth-child(11),
.orbit-11 {
  --orbit-nth: 11;
}

.orbit:nth-child(12),
.orbit-12 {
  --orbit-nth: 12;
}

/* Define custom orbit sizes */
.satellite:nth-child(1),
o-sector:nth-child(1),
.vector:nth-child(1) {
  --sat-number: 1;
}
.satellite:nth-child(2),
o-sector:nth-child(2),
.vector:nth-child(2) {
  --sat-number: 2;
}
.satellite:nth-child(3),
o-sector:nth-child(3),
.vector:nth-child(3) {
  --sat-number: 3;
}
.satellite:nth-child(4),
o-sector:nth-child(4),
.vector:nth-child(4) {
  --sat-number: 4;
}
.satellite:nth-child(5),
o-sector:nth-child(5),
.vector:nth-child(5) {
  --sat-number: 5;
}
.satellite:nth-child(6),
o-sector:nth-child(6),
.vector:nth-child(6) {
  --sat-number: 6;
}
.satellite:nth-child(7),
o-sector:nth-child(7),
.vector:nth-child(7) {
  --sat-number: 7;
}
.satellite:nth-child(8),
o-sector:nth-child(8),
.vector:nth-child(8) {
  --sat-number: 8;
}
.satellite:nth-child(9),
o-sector:nth-child(9),
.vector:nth-child(9) {
  --sat-number: 9;
}
.satellite:nth-child(10),
o-sector:nth-child(10),
.vector:nth-child(10) {
  --sat-number: 10;
}
.satellite:nth-child(11),
o-sector:nth-child(11),
.vector:nth-child(11) {
  --sat-number: 11;
}
.satellite:nth-child(12),
o-sector:nth-child(12),
.vector:nth-child(12) {
  --sat-number: 12;
}

.orbit:has(> .satellite:nth-child(1)),
[class*="orbit-"]:has(> .satellite:nth-child(1)) {
  --angle: calc(var(--range) / 1);
}
.orbit:has(> o-sector:nth-child(1)),
[class*="orbit-"]:has(> o-sector:nth-child(1)) {
  --angle: calc(var(--range) / 1);
}
.orbit:has(> .vector:nth-child(1)),
[class*="orbit-"]:has(> .vector:nth-child(1)) {
  --angle: calc(var(--range) / 1);
}
.orbit:has(> .satellite:nth-child(2)),
[class*="orbit-"]:has(> .satellite:nth-child(2)) {
  --angle: calc(var(--range) / 2);
}
.orbit:has(> o-sector:nth-child(2)),
[class*="orbit-"]:has(> o-sector:nth-child(2)) {
  --angle: calc(var(--range) / 2);
}
.orbit:has(> .vector:nth-child(2)),
[class*="orbit-"]:has(> .vector:nth-child(2)) {
  --angle: calc(var(--range) / 2);
}
.orbit:has(> .satellite:nth-child(3)),
[class*="orbit-"]:has(> .satellite:nth-child(3)) {
  --angle: calc(var(--range) / 3);
}
.orbit:has(> o-sector:nth-child(3)),
[class*="orbit-"]:has(> o-sector:nth-child(3)) {
  --angle: calc(var(--range) / 3);
}
.orbit:has(> .vector:nth-child(3)),
[class*="orbit-"]:has(> .vector:nth-child(3)) {
  --angle: calc(var(--range) / 3);
}
.orbit:has(> .satellite:nth-child(4)),
[class*="orbit-"]:has(> .satellite:nth-child(4)) {
  --angle: calc(var(--range) / 4);
}
.orbit:has(> o-sector:nth-child(4)),
[class*="orbit-"]:has(> o-sector:nth-child(4)) {
  --angle: calc(var(--range) / 4);
}
.orbit:has(> .vector:nth-child(4)),
[class*="orbit-"]:has(> .vector:nth-child(4)) {
  --angle: calc(var(--range) / 4);
}
.orbit:has(> .satellite:nth-child(5)),
[class*="orbit-"]:has(> .satellite:nth-child(5)) {
  --angle: calc(var(--range) / 5);
}
.orbit:has(> o-sector:nth-child(5)),
[class*="orbit-"]:has(> o-sector:nth-child(5)) {
  --angle: calc(var(--range) / 5);
}
.orbit:has(> .vector:nth-child(5)),
[class*="orbit-"]:has(> .vector:nth-child(5)) {
  --angle: calc(var(--range) / 5);
}
.orbit:has(> .satellite:nth-child(6)),
[class*="orbit-"]:has(> .satellite:nth-child(6)) {
  --angle: calc(var(--range) / 6);
}
.orbit:has(> o-sector:nth-child(6)),
[class*="orbit-"]:has(> o-sector:nth-child(6)) {
  --angle: calc(var(--range) / 6);
}
.orbit:has(> .vector:nth-child(6)),
[class*="orbit-"]:has(> .vector:nth-child(6)) {
  --angle: calc(var(--range) / 6);
}
.orbit:has(> .satellite:nth-child(7)),
[class*="orbit-"]:has(> .satellite:nth-child(7)) {
  --angle: calc(var(--range) / 7);
}
.orbit:has(> o-sector:nth-child(7)),
[class*="orbit-"]:has(> o-sector:nth-child(7)) {
  --angle: calc(var(--range) / 7);
}
.orbit:has(> .vector:nth-child(7)),
[class*="orbit-"]:has(> .vector:nth-child(7)) {
  --angle: calc(var(--range) / 7);
}
.orbit:has(> .satellite:nth-child(8)),
[class*="orbit-"]:has(> .satellite:nth-child(8)) {
  --angle: calc(var(--range) / 8);
}
.orbit:has(> o-sector:nth-child(8)),
[class*="orbit-"]:has(> o-sector:nth-child(8)) {
  --angle: calc(var(--range) / 8);
}
.orbit:has(> .vector:nth-child(8)),
[class*="orbit-"]:has(> .vector:nth-child(8)) {
  --angle: calc(var(--range) / 8);
}
.orbit:has(> .satellite:nth-child(9)),
[class*="orbit-"]:has(> .satellite:nth-child(9)) {
  --angle: calc(var(--range) / 9);
}
.orbit:has(> o-sector:nth-child(9)),
[class*="orbit-"]:has(> o-sector:nth-child(9)) {
  --angle: calc(var(--range) / 9);
}
.orbit:has(> .vector:nth-child(9)),
[class*="orbit-"]:has(> .vector:nth-child(9)) {
  --angle: calc(var(--range) / 9);
}
.orbit:has(> .satellite:nth-child(10)),
[class*="orbit-"]:has(> .satellite:nth-child(10)) {
  --angle: calc(var(--range) / 10);
}
.orbit:has(> o-sector:nth-child(10)),
[class*="orbit-"]:has(> o-sector:nth-child(10)) {
  --angle: calc(var(--range) / 10);
}
.orbit:has(> .vector:nth-child(10)),
[class*="orbit-"]:has(> .vector:nth-child(10)) {
  --angle: calc(var(--range) / 10);
}
.orbit:has(> .satellite:nth-child(11)),
[class*="orbit-"]:has(> .satellite:nth-child(11)) {
  --angle: calc(var(--range) / 11);
}
.orbit:has(> o-sector:nth-child(11)),
[class*="orbit-"]:has(> o-sector:nth-child(11)) {
  --angle: calc(var(--range) / 11);
}
.orbit:has(> .vector:nth-child(11)),
[class*="orbit-"]:has(> .vector:nth-child(11)) {
  --angle: calc(var(--range) / 11);
}
.orbit:has(> .satellite:nth-child(12)),
[class*="orbit-"]:has(> .satellite:nth-child(12)) {
  --angle: calc(var(--range) / 12);
}
.orbit:has(> o-sector:nth-child(12)),
[class*="orbit-"]:has(> o-sector:nth-child(12)) {
  --angle: calc(var(--range) / 12);
}
.orbit:has(> .vector:nth-child(12)),
[class*="orbit-"]:has(> .vector:nth-child(12)) {
  --angle: calc(var(--range) / 12);
}

/*
.border {
    padding: 16em;
    background: radial-gradient(farthest-side,#146565 98%,#1b3fd8) 33% 97%/1em 1em, radial-gradient(farthest-side,gold 98%,#0000) 100% 50%/1em 1em, conic-gradient(from -151deg, #013636 120deg, #0000ff00 0 210deg,gold 0 250deg,#f50e0e 0);
    background-repeat: no-repeat;
    -webkit-mask: radial-gradient(farthest-side, #870f0f calc(99% - 11em), #0000 calc(100% - 10em) calc(99% - 3em), #000 calc(100% - 1em));
}
*/
