@use './variables' as *;
/*! 
## .orbit or .orbit-*

This class renders a circumsference around a .orbital-zone center and allows other elements to be 
distributed along width. By default there are 12 orbits. The number can be modify with `$max-orbits` var at `_variables.scss`.

**Important:** .orbit or .orbit-* is a direct child element of .orbital-zone.

### Usage: 

```html
<div class="orbital-zone">
  <div class="orbit"></div>
  <div class="orbit"></div>
</div>
```

### Examples:

- This renders three orbits equally distributed 
  ```html
  <div class="orbit"></div>
  <div class="orbit"></div>
  <div class="orbit"></div>
  ```

- This renders three orbits with custom distribution
  ```html
  <div class="orbit-2"></div>
  <div class="orbit-9"></div>
  <div class="orbit-12"></div>
  ```

- This renders nested orbits around a satellite
  ```html
  <div class="orbital-zone">
    <div class="orbit">
      <div class="satellite">
        <div class="orbital-zone">
          <div class="orbit"></div>
          <div class="orbit"></div>
        </div>
      </div>
    </div>
  </div>
  ```
  
### Customization:

It has some special attributes and css variables to customize it or its children elements:
  
  - Class `.gap-*` applied on `.orbit` or `.orbit-*` set a `o-sector` gap space. Default '0'
  - Class utility `.range-*` applied on `.orbit` or `.orbit-*`: Default '360deg'
  - Class utility `.from-*` applied on `.orbit` or `.orbit-*`: Default '0deg'
  - Class utility `.inner-orbit`: To place `o-sector` just below its orbit
  - Class utility `.outer-orbit`: To place `o-sector` just above its orbit

  - CSS styles. User can customize `.orbit` by adding CSS properties.

Besides css properties that user can change according his needs, there two css variables to turn `.orbit`or `.orbit-*` into 
an ellipse (`--o-ellipse-x`, and `--o-ellipse-y`). This will affect orbit and its childs, with an excepcion of `<o-sector>`
web component that will be hide when orbit is an ellipse. Values range from 0 to 1.

**Important**: Ckecking `--o-ellipse-x` and `--o-ellipse-y` doesn't work currently on Firefox and Safari.

```html
<div class="orbital-zone" style="--o-ellipse-x: 0.6">
  <div class="orbit">
    <div class="satellite">
      <div class="orbital-zone">
        <div class="orbit"></div>
        <div class="orbit"></div>
      </div>
    </div>
  </div>
</div>
```

There are some utility classes that are set on orbit element and affect its child radial layout (`.from-*`, `.range-*`). 
Please see **Radial Layout section**.


### TODO
* Fix orbit-0 ok by adding ortbit-nth 0.1  OK
* Add center position for vector, satellite  OK
* Add .ccv for all orbit child ok
* correjir sector y progress ok
* add content radial aligment y 
  + hacerlo rsponsive llegado el caso al espacio.. ver
= add slot content para w-c NO HACE X AHORA XQ SE CUBRE CON SATELLITE O TEXT
* CORREJIR ALINEACION TODO DESDE 0 A LAS 12 OK
* probar sacar cambio de tamano en nested xq confunde mucho. ok
* arreglar lenght.... para que sea responsive.. OK con una funcion
... UN COMPOENENT DE TEXTO CURVO WIP. falta tema ajuste al path .. con attrib y size
* bug no gap when one sector/text. 
* bug alineacion gaps ... 180 on mas de un sector/ o-label
* separar vector de constellation... o vector to spoke / vector.is-poligon to segment
* ornit-nth cambiar nombre
* trabajar con spoke as container... tiene que alinearse siempre a la mitad asi, si tiene una imagen dentro queda
alineada tambien.


*/
.orbit, [class*='orbit-'] {
  container-name: orbit;
  --o-diameter: calc(var(--o-orbit-number) * var(--o-lenght) / #{$max-orbits});
  --o-radius: calc(var(--o-diameter) / 2);
  width: calc(var(--o-diameter) / var(--o-ellipse-x));
  height: calc(var(--o-diameter) / var(--o-ellipse-y));
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
}
