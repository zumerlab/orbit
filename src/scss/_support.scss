@use './variables'  as *;

/*!

## Orbit support and check

Orbit has a few but useful CSS checks and supports:

### o-sector and o-progress only on circular orbits

Currently Orbit doesn't support ellipse shapes, so when detected these web-components will be hidden.

### Visual warning on invalid nested elements

- Orbit checks and warns if `.orbit-zone` has some invalid Orbit direct child element. Only `.orbit` or `.orbit-*` are allowed

- Orbit checks and warns if `.satellite` has some invalid Orbit direct child element. Only `.orbit-zone` is allowed. 

*/

@container osector not style(--o-ellipse-x: 1) {
  /* Shown if ratio equals 1*/
  o-sector, o-progress, o-label {
    display: none;
  }
}
@container osector not style(--o-ellipse-y: 1) {
  /* Shown if ratio equals 1*/
  o-sector, o-progress, o-label {
    display: none;
  }
}


/* orbit-zone checks */
.orbit-zone:has(>*:not(.orbit, [class*='orbit-'])) {
  border: 3px dotted red!important;
}
.orbit-zone:has(>*:not(.orbit, [class*='orbit-'])) > * {
  filter:grayscale(1) opacity(0.2)
}
.orbit-zone:has(> *:not(.orbit, [class*='orbit-']))::after {
  content: "⚠️";
  font-size: 140%;
  animation:  pulse 1.5s infinite;
  z-index: 99;
  filter: drop-shadow(3px 3px 8px rgb(255, 254, 254));
  position: absolute;
}

/* orbit and satellite checks */
.orbit:has(>*:is(.orbit, [class*='orbit-'])), 
[class*='orbit-']:not(.orbit-zone):has(>*:is(.orbit, [class*='orbit-'])),
.satellite:has(>*:not(.orbit-zone, .capsule)) {
 border: 2px dotted rgb(0, 255, 47)!important;
}
.orbit:has(>*:is(.orbit, [class*='orbit-']))> *, 
[class*='orbit-']:not(.orbit-zone):has(>*:is(.orbit, [class*='orbit-']))> *,
.satellite:has(>*:not(.orbit-zone, .capsule)) > * {
  opacity: 0.4
}
.orbit:has(>*:is(.orbit, [class*='orbit-']))::after, 
[class*='orbit-']:not(.orbit-zone):has(>*:is(.orbit, [class*='orbit-']))::after, 
.satellite:has(>*:not(.orbit-zone, .capsule))::after {
  content: "⚠️";
  animation:  pulse 1.5s infinite;
  z-index: 999;
  filter: drop-shadow(1px 1px 8px rgb(255, 254, 254));
  position: absolute;
}


@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0;
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
