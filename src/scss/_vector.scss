/*! 
## .vector

This class renders a perpendicular segment along an orbit. By default there are 24 vectors per orbit. The number can be modify with `$max-orbiters` var at `_variables.scss`.
  
### Customization

It has some special classes and css variables to customize it:

  - Class utility `.range-*`: Default '360deg'
  - Class utility `.from-*`: Default '0deg'
  - Class utility `.grow-*x`: To increase size according number of orbits. Default 1.
  - Class utility `.reduce-*`: To decrease size according an orbit fracction percentage. Default 1.
  - Class utility `.inner-orbit`: To place `.vector` just below its orbit
  - Class utility `.outer-orbit`: To place `.vector` just above its orbit

  - CSS styles. User can customize `.vector` by adding CSS properties to it. 

### Usage 

```html
<div class="orbit">
  <div class="vector"><div>
  <div class="vector x5"><div> <!-- 50% of orbit radius -->
  <div class="vector x01"><div> <!-- 1% of orbit radius -->
  <div class="vector"><div>
</div>
```

**Important:** `.vector` can only be placed into a parent `.orbit` or `.orbit-*`

*/

.vector {
  container-name: vector;
  --o-angle-composite: var(--o-angle) * var(--o-position);
  width: calc(var(--o-radius, 500px) / var(--orbit-nth) * var(--o-size-ratio, 1));
  position: absolute;
  padding: 0;
  transform: translate(
      calc(
        (var(--o-radius, 500px) - var(--o-aligment, 1px)) / var(--o-ellipse-x) *
          cos(var(--o-from) + var(--o-angle-composite))
      ),
      calc(
        (var(--o-radius, 500px) - var(--o-aligment, 1px)) / var(--o-ellipse-y) *
          sin(var(--o-from) + var(--o-angle-composite))
      )
    )
    rotate(
      calc(var(--o-angle-composite))
    );
  height: 1px; /*use vars latter */
  pointer-events: none;
  border: none;
  background: rgb(0, 0, 0);
}
