
@use './variables' as *;

.orbit-0 {
  --o-orbit-number: 0.01;
}
@for $i from 1 through $extra-orbits {
    :nth-child(#{$i} of .orbit), .orbit-#{$i} {
    --o-orbit-number: #{$i};
    }
}

/* Satellites, sectors, label, side, and vectors layout */
@for $i from 1 through $max-orbiters {
 :nth-child(#{$i} of .side){
    --o-orbit-child-number: #{$i - 2}; // Uses - 1 to start from 0 deg.
    }
}

@for $i from 1 through $max-orbiters {
  :nth-child(#{$i} of .satellite),:nth-child(#{$i} of o-slice), :nth-child(#{$i} of .vector) ,:nth-child(#{$i} of o-text) {
    --o-orbit-child-number: #{$i - 1}; // Uses - 1 to start from 0 deg.
    }
}

@for $i from 1 through $max-orbiters {
    .orbit:has(> :nth-child(#{$i} of .satellite), > :nth-child(#{$i} of o-slice), > :nth-child(#{$i} of .vector), > :nth-child(#{$i} of .side), > :nth-child(#{$i} of o-text)), 
    [class*='orbit-']:has(> :nth-child(#{$i} of .satellite), > :nth-child(#{$i} of o-slice), > :nth-child(#{$i} of .vector), > :nth-child(#{$i} of .side), > :nth-child(#{$i} of o-text)) {
    --o-angle: calc(var(--o-range) / (#{$i} - var(--o-fit-range, 0)));
    }
}

@for $i from 1 through $max-orbiters {
  .orbit:has(> :nth-child(#{$i} of .side)), 
  [class*='orbit-']:has(> :nth-child(#{$i} of .side)) {
  --o-angle: calc(var(--o-range) / #{$i});
  }
}

